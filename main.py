from flask import Flask, request
import requests, threading, os, json, time
from firebase_utils import initialize_firebase

app = Flask(__name__)

# üîê –ù–µ–≥—ñ–∑–≥—ñ BotZhasau —Ç–æ–∫–µ–Ω (”©–∑ Manybot-—ã“£)
BOT_TOKEN = "YOUR_MAIN_BOT_TOKEN"
TELEGRAM_API = f"https://api.telegram.org/bot{BOT_TOKEN}"

# üî• Firebase “õ–æ—Å—É
BOTS_REF, USERS_REF = initialize_firebase()

# === üì§ Telegram —Ö–∞–±–∞—Ä –∂—ñ–±–µ—Ä—É ===
def send_message(chat_id, text, buttons=None):
    payload = {"chat_id": chat_id, "text": text, "parse_mode": "HTML"}
    if buttons:
        payload["reply_markup"] = {"keyboard": buttons, "resize_keyboard": True}
    requests.post(f"{TELEGRAM_API}/sendMessage", json=payload)

# === üåê BotZhasau webhook ===
@app.route(f"/{BOT_TOKEN}", methods=["POST"])
def botzhasau_webhook():
    data = request.get_json()
    if not data or "message" not in data:
        return "no message"

    msg = data["message"]
    chat_id = msg["chat"]["id"]
    text = msg.get("text", "")

    user_ref = USERS_REF.child(str(chat_id))
    user_data = user_ref.get() or {}

    # üîπ 1. –ê–ª“ì–∞—à“õ—ã —Å—Ç–∞—Ä—Ç
    if text.lower() == "/start":
        send_message(chat_id,
            "ü§ñ <b>BotZhasau</b> –∂“Ø–π–µ—Å—ñ–Ω–µ “õ–æ—à –∫–µ–ª–¥—ñ“£!\n\n"
            "–ë–æ—Ç –∂–∞—Å–∞—É “Ø—à—ñ–Ω –º–∞“ì–∞–Ω ”©–∑—ñ“£–Ω—ñ“£ Telegram BotFather —Ç–æ–∫–µ–Ω—ñ“£–¥—ñ –∂—ñ–±–µ—Ä ‚§µÔ∏è"
        )
        return "ok"

    # üîπ 2. –ï–≥–µ—Ä —Ç–æ–∫–µ–Ω —Ñ–æ—Ä–º–∞—Ç—Ç–∞ –±–æ–ª—Å–∞ ‚Äî —Ç—ñ—Ä–∫–µ—É
    if ":" in text and len(text) > 30:
        user_ref.set({"token": text})
        send_message(chat_id, "‚úÖ –ë–æ—Ç —Ç–æ–∫–µ–Ω —Å–∞“õ—Ç–∞–ª–¥—ã! –ï–Ω–¥—ñ /add –∫–æ–º–∞–Ω–¥–∞—Å—ã–º–µ–Ω –∂–∞—É–∞–ø –æ—Ä–Ω–∞—Ç.")
        return "ok"

    # üîπ 3. –ö–æ–º–∞–Ω–¥–∞ “õ–æ—Å—É
    if text.lower().startswith("/add"):
        parts = text.split(" ", 2)
        if len(parts) < 3:
            send_message(chat_id, "–§–æ—Ä–º–∞—Ç: /add –∫–æ–º–∞–Ω–¥–∞ –∂–∞—É–∞–ø")
        else:
            cmd, reply = parts[1], parts[2]
            user_commands = user_data.get("commands", {})
            user_commands[cmd] = reply
            user_ref.update({"commands": user_commands})
            send_message(chat_id, f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ '{cmd}' —Å–∞“õ—Ç–∞–ª–¥—ã!")
        return "ok"

    # üîπ 4. –ë–æ—Ç —Ç—ñ–∑—ñ–º—ñ
    if text.lower() == "/mybot":
        token = user_data.get("token")
        if token:
            send_message(chat_id, f"ü§ñ –°–µ–Ω—ñ“£ –±–æ—Ç—ã“£:\n<code>{token}</code>")
        else:
            send_message(chat_id, "–ë–æ—Ç —Ç—ñ—Ä–∫–µ–ª–º–µ–≥–µ–Ω üòÖ")
        return "ok"

    send_message(chat_id, "‚ÑπÔ∏è –ù“±—Å“õ–∞—É–ª—ã“õ:\n/start ‚Äî –±–∞—Å—Ç–∞—É\n/add ‚Äî –∫–æ–º–∞–Ω–¥–∞ “õ–æ—Å—É\n/mybot ‚Äî —Ç–æ–∫–µ–Ω–¥—ñ –∫”©—Ä—É")
    return "ok"

# === üåê –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã –±–æ—Ç—Ç–∞—Ä—ã–Ω—ã“£ webhook-—Ç–∞—Ä—ã ===
@app.route("/<token>", methods=["POST"])
def user_bot_webhook(token):
    data = request.get_json()
    if not data or "message" not in data:
        return "no message"

    msg = data["message"]
    chat_id = msg["chat"]["id"]
    text = msg.get("text", "")

    # üîç Firebase-—Ç–∞–Ω –±–æ—Ç –∏–µ—Å—ñ–Ω —Ç–∞–±—É
    all_users = USERS_REF.get() or {}
    owner_id = None
    commands = {}
    for uid, info in all_users.items():
        if info.get("token") == token:
            owner_id = uid
            commands = info.get("commands", {})
            break

    if not owner_id:
        return "no owner"

    # üîπ –ö–æ–º–∞–Ω–¥–∞ —Ç–∞–±—É
    for cmd, reply in commands.items():
        if text.lower().startswith(cmd.lower()):
            requests.post(
                f"https://api.telegram.org/bot{token}/sendMessage",
                json={"chat_id": chat_id, "text": reply}
            )
            return "ok"

    # üîπ –ï–≥–µ—Ä –∫–æ–º–∞–Ω–¥–∞ —Ç–∞–±—ã–ª–º–∞—Å–∞
    requests.post(
        f"https://api.telegram.org/bot{token}/sendMessage",
        json={"chat_id": chat_id, "text": "–ú–µ–Ω—ñ“£ –∏–µ–º –±“±–ª –∫–æ–º–∞–Ω–¥–∞“ì–∞ –∂–∞—É–∞–ø –æ—Ä–Ω–∞—Ç–ø–∞“ì–∞–Ω üòÖ"}
    )
    return "ok"

@app.route("/")
def home():
    return "ü§ñ BotZhasau Flask —Å–µ—Ä–≤–µ—Ä—ñ –∂“±–º—ã—Å —ñ—Å—Ç–µ–ø —Ç“±—Ä ‚úÖ"

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)
