import os
import json
import telebot
from flask import Flask, request
import firebase_admin
from firebase_admin import credentials, db

# === üîê Telegram —Ç–æ–∫–µ–Ω—ñ“£–¥—ñ –æ—Å—ã–Ω–¥–∞ –∂–∞–∑ –Ω–µ–º–µ—Å–µ Render Environment-—Ç–µ–Ω –∞–ª
BOT_TOKEN = os.getenv("BOT_TOKEN", "8005464032:AAGTBZ99oB9pcF0VeEjDGn20LgRWzHN25T4")
bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# === Firebase –æ—Ä–Ω–∞—Ç—É ===
def initialize_firebase():
    try:
        print("üîÑ Firebase “õ–æ—Å—ã–ª—ã–ø –∂–∞—Ç—ã—Ä...")

        firebase_json = os.getenv("FIREBASE_SECRET")

        if not firebase_json and os.path.exists("firebase_secret.json"):
            with open("firebase_secret.json", "r") as f:
                firebase_json = f.read()

        if not firebase_json:
            print("üö´ Firebase secret —Ç–∞–±—ã–ª–º–∞–¥—ã!")
            return None, None

        creds_dict = json.loads(firebase_json)
        cred = credentials.Certificate(creds_dict)
        firebase_admin.initialize_app(cred, {
            "databaseURL": "https://manybot-kz-default-rtdb.firebaseio.com/"
        })
        print("‚úÖ Firebase —Å”ô—Ç—Ç—ñ “õ–æ—Å—ã–ª–¥—ã!")
        users_ref = db.reference("users")
        bots_ref = db.reference("user_bots")
        return users_ref, bots_ref
    except Exception as e:
        print(f"üö´ Firebase “õ–∞—Ç–µ—Å—ñ: {e}")
        return None, None


USERS_REF, BOTS_REF = initialize_firebase()


# === Telegram –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä—ã ===

@bot.message_handler(commands=['start'])
def start(message):
    text = (
        "üëã –°”ô–ª–µ–º, *{0}*!\n\n"
        "–ú–µ–Ω ‚Äî ManyBot KZ ü§ñ\n"
        "–ú–µ–Ω –∞—Ä“õ—ã–ª—ã ”©–∑—ñ“£–Ω—ñ“£ Telegram –±–æ—Ç—ã“£–¥—ã –æ“£–∞–π “õ“±—Ä–∞ –∞–ª–∞—Å—ã“£!\n\n"
        "–ë–∞—Å—Ç–∞—É “Ø—à—ñ–Ω –º”ô–∑—ñ—Ä–¥–µ–Ω —Ç–∞“£–¥–∞:\n"
        "‚û°Ô∏è /newbot ‚Äî –∂–∞“£–∞ –±–æ—Ç “õ–æ—Å—É\n"
        "‚û°Ô∏è /mybots ‚Äî –º–µ–Ω—ñ“£ –±–æ—Ç—Ç–∞—Ä—ã–º\n"
        "‚û°Ô∏è /help ‚Äî –∫”©–º–µ–∫ –Ω“±—Å“õ–∞—É–ª—ã“ì—ã"
    ).format(message.from_user.first_name)
    bot.send_message(message.chat.id, text, parse_mode="Markdown")

    if USERS_REF:
        USERS_REF.child(str(message.chat.id)).set({
            "username": message.from_user.username,
            "first_name": message.from_user.first_name
        })


@bot.message_handler(commands=['help'])
def help_cmd(message):
    bot.send_message(
        message.chat.id,
        "‚ÑπÔ∏è *–ö”©–º–µ–∫*\n\n"
        "1Ô∏è‚É£ /newbot ‚Äî –∂–∞“£–∞ –±–æ—Ç “õ–æ—Å—É.\n"
        "2Ô∏è‚É£ /mybots ‚Äî —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω –±–æ—Ç—Ç–∞—Ä—ã“£–¥—ã –∫”©—Ä—É.\n"
        "3Ô∏è‚É£ /broadcast ‚Äî –±–∞—Ä–ª—ã“õ “õ–æ–ª–¥–∞–Ω—É—à—ã“ì–∞ —Ö–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É (–∞–¥–º–∏–Ω–≥–µ).\n\n"
        "–ë–æ—Ç —Ç–æ–∫–µ–Ω—ñ“£–¥—ñ BotFather-–¥–µ–Ω –∞–ª—ã–ø, –æ—Å—ã –±–æ—Ç“õ–∞ –∂—ñ–±–µ—Ä.",
        parse_mode="Markdown"
    )


@bot.message_handler(commands=['newbot'])
def newbot(message):
    msg = bot.send_message(message.chat.id, "ü§ñ –ë–æ—Ç—Ç—ã“£ *—Ç–æ–∫–µ–Ω—ñ–Ω* –∂—ñ–±–µ—Ä—ñ“£—ñ–∑:", parse_mode="Markdown")
    bot.register_next_step_handler(msg, save_new_bot)


def save_new_bot(message):
    token = message.text.strip()
    if not token.startswith(""):
        bot.reply_to(message, "‚ö†Ô∏è “ö–∞—Ç–µ —Ç–æ–∫–µ–Ω. “ö–∞–π—Ç–∞ —Ç–µ–∫—Å–µ—Ä—ñ–ø –∫”©—Ä—à—ñ.")
        return

    if BOTS_REF:
        BOTS_REF.child(str(message.chat.id)).push({"token": token})
        bot.reply_to(message, "‚úÖ –ñ–∞“£–∞ –±–æ—Ç —Å”ô—Ç—Ç—ñ “õ–æ—Å—ã–ª–¥—ã!\n–ï–Ω–¥—ñ /mybots –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω “õ–æ–ª–¥–∞–Ω.")


@bot.message_handler(commands=['mybots'])
def my_bots(message):
    if not BOTS_REF:
        bot.reply_to(message, "üö´ Firebase –±–∞–π–ª–∞–Ω—ã—Å—ã –∂–æ“õ.")
        return

    user_bots = BOTS_REF.child(str(message.chat.id)).get()
    if not user_bots:
        bot.reply_to(message, "–°–µ–Ω–¥–µ ”ô–ª—ñ –±–æ—Ç—Ç–∞—Ä –∂–æ“õ. /newbot –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω “õ–æ–ª–¥–∞–Ω.")
        return

    text = "ü§ñ *–°–µ–Ω—ñ“£ –±–æ—Ç—Ç–∞—Ä—ã“£:*\n\n"
    for _, bot_data in user_bots.items():
        text += f"üîπ `{bot_data['token']}`\n"
    bot.send_message(message.chat.id, text, parse_mode="Markdown")


# === –§–æ–Ω–¥–∞“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä ===

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.send_message(message.chat.id, f"üí¨ {message.text}")


# === Flask –º–∞—Ä—à—Ä—É—Ç—Ç–∞—Ä—ã ===

@app.route("/", methods=["GET"])
def index():
    return "‚úÖ ManyBot KZ –∂“±–º—ã—Å —ñ—Å—Ç–µ–ø —Ç“±—Ä!"


@app.route(f"/{BOT_TOKEN}", methods=["POST"])
def webhook():
    try:
        json_update = request.get_json(force=True)
        update = telebot.types.Update.de_json(json_update)
        bot.process_new_updates([update])
        return "OK", 200
    except Exception as e:
        print(f"‚ö†Ô∏è Webhook “õ–∞—Ç–µ—Å—ñ: {e}")
        return "Error", 500


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 10000)))